---
import HeaderNavLink from './HeaderNavLink.astro'
import siteConfig from '@data/site-config.ts'

const primaryNavLinks = siteConfig.primaryNavLinks || []

const { class: className } = Astro.props
---

<header class:list={['flex items-center justify-between gap-6 px-4 py-4 sm:px-8 sm:py-6', className]}>
  {
    siteConfig.logo && siteConfig.logo?.src ? (
      <a href="/">
        <img class="max-h-12" src={siteConfig.logo.src} alt={siteConfig.logo.alt || ''} />
      </a>
    ) : (
      <a class="text-xl font-bold sm:text-2xl" href="/">
        {siteConfig.title}
      </a>
    )
  }
  {
    primaryNavLinks.length > 0 && (
      <nav class="relative">
        <button
          class="menu-toggle relative z-20 inline-flex h-10 w-10 cursor-pointer items-center justify-center rounded-full bg-primary text-white transition-shadow duration-300 hover:shadow-button"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items">
          <span class="menu-toggle-icon relative h-1 w-1 rounded-full bg-white" />
        </button>
        <ul id="menu-items" class="menu absolute -top-3 -right-3 z-10 border border-white/40 bg-white/75 px-8 pt-16 pb-10 sm:px-12 sm:pt-20 sm:pb-16">
          {primaryNavLinks.map(link => (
            <li class="mb-1 border-b border-slate-200/70">
              <HeaderNavLink
                class="relative block py-1 pr-6 text-lg font-bold text-slate-700 transition duration-300 hover:text-slate-500 sm:text-xl"
                href={link.href}>
                {link.text}
              </HeaderNavLink>
            </li>
          ))}
        </ul>
      </nav>
    )
  }
</header>

<style>
  @reference "tailwindcss";

  .menu {
    width: calc(100vw - 0.5rem);
    max-width: 18.75rem;
    border-radius: 26px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(5px);
    opacity: 0;
    transform: scale(0.6);
    transform-origin: top right;
    transition:
      transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.3s,
      opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.25s,
      visibility 0s 0.5s;
    visibility: hidden;
  }
  .menu.is-visible {
    opacity: 1;
    transform: scale(1);
    transition:
      transform 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.25s,
      opacity 0.15s 0.15s,
      visibility 0s 0.25s;
    visibility: visible;
  }
  .menu-toggle-icon {
    transition:
      height 0s 0.25s,
      width 0s 0.25s;
  }
  .menu-toggle-icon.is-active {
    height: 3px;
    width: 3px;
  }
  .menu-toggle-icon:before,
  .menu-toggle-icon:after {
    @apply absolute top-1/2 left-1/2 h-1 w-1 -translate-x-1/2 -translate-y-1/2 rounded-full bg-white;
    content: '';
    transition:
      width 0.25s cubic-bezier(0.4, 0, 0.2, 1),
      height 0s 0.25s,
      translate 0s 0.25s,
      rotate 0s 0.25s,
      margin 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.25s;
  }
  .menu-toggle-icon:before {
    @apply -ml-2;
  }
  .menu-toggle-icon:after {
    @apply ml-2;
  }
  .menu-toggle-icon.is-active:before,
  .menu-toggle-icon.is-active:after {
    @apply ml-0 w-5 rounded-md;
    height: 3px;
    transition:
      margin 0.25s cubic-bezier(0.4, 0, 0.2, 1),
      height 0s 0.25s,
      translate 0s 0.25s,
      rotate 0s 0.25s,
      width 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.25s;
  }
  .menu-toggle-icon.is-active:before {
    @apply rotate-45;
  }
  .menu-toggle-icon.is-active:after {
    @apply -rotate-45;
  }
</style>

<script>
  function menuToggle() {
    const menu = document.querySelector('.menu')
    const menuToggleBtn = document.querySelector('.menu-toggle')
    const menuToggleIcon = document.querySelector('.menu-toggle-icon')
    menuToggleBtn?.addEventListener('click', () => {
      const isMenuExpanded = menuToggleBtn.getAttribute('aria-expanded') === 'true'
      menuToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true')
      menuToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu')
      menuToggleIcon?.classList.toggle('is-active')
      menu?.classList.toggle('is-visible')
    })
  }
  menuToggle()
  document.addEventListener('astro:after-swap', menuToggle)
</script>
